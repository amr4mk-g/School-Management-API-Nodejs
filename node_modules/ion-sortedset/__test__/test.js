

const SortedSetManager = require('../index.js');
const sm = new SortedSetManager({ url: "redis://127.0.0.1:6379" });

let idsList = [];

const consumer = sm.consumer({
	timestamp: Date.now(),
	key: '3enab',
	executionkey: "asd",
	keepAlive: true,
	segmantDuration: 1000, // the timestamps wil be retrieved with blocks of 1 second 
	onMessage: (d) => {
		idsList.push(d.id);
		console.log(`got message`, d);
	},
	onError: (d) => { console.log(`got error`, d) },
	onClose: () => { console.log(`got close`) },
})

const producer = sm.producer();
generateTimestamp();

async function generateTimestamp() {
	var ssjson;
	var ssKey = '3enab';
	ftimestamp = (Date.now() + 10000);
	for (var i = 0; i < 1000; i++) {
		for (var j = 0; j < 5; j++) {
			ssjson = {
				args: { call: 'timestamper.time' },
				data: {
					a: ftimestamp + (j * 100)
				}
			}
			//console.log("ðŸš€ ~ file: test.js:31 ~ generateTimestamp ~ ssjson:", ssjson)
			await producer.emit({ key: ssKey, json: ssjson, timestamp: ftimestamp });
		}
		ftimestamp += 1000;
	}
}

//setTimeout(() => {
//	consumer.close();
//}, 100000)