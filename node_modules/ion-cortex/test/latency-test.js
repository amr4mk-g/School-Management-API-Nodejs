const Cortex         = require('../index');


let prevSent = new Date().getTime();
const cortex = new Cortex({
    prefix: "spacejat",
    url: "redis://165.22.65.7:6200",
    type: 'm1',
    activeDelay: "1s",
    idleDelay: "900ms",
    state: ()=>{
        let time = new Date().getTime();
        console.log(`local_between_sends: `, time-prevSent, `         @${time}`);
        prevSent = time;
        return { sendTime: time}; 
    }
});

let preAt  = new Date().getTime();
let preMsgId = null;

setInterval(()=>{
    console.log('_');

    if(cortex.nodes.m1){
        let hostsKeys = Object.keys(cortex.nodes.m1);
        console.log(` hostsKeys = ${hostsKeys.length};`);
        console.log(hostsKeys[0])
        if(hostsKeys[0]){

            let host = cortex.nodes.m1[hostsKeys[0]];
            let msgId = host._at;

            let host_at = host._at.split('-')[0];

            const jumpDif = host.at-preAt;
            preAt=host.at;

            console.log(` --------- (${msgId} | ${preMsgId}) -----------`)
            console.log(`between_receives: `, jumpDif-1000, `         now @ ${host.at} / last @ ${preAt}`);
            preMsgId = msgId;
            const difInReceive = host_at - host.state.sendTime;
            console.log(`remote_recoding_latency: `, difInReceive, `        send @ ${host.state.sendTime} / record @ ${host_at}`);
            if(jumpDif>1500)console.log("||||||||||||||||||||||||||||500+ms lag");
            console.log(`-----------------------------------------------`);
        }
        

    }
}, 1000)